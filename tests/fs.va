
use valk:fs
use valk:io

test "fs:dir_of" {
    assert(fs:dir_of("/etc/nginx/nginx.conf") == "/etc/nginx")
    assert(fs:dir_of("/etc/nginx/") == "/etc")
    assert(fs:dir_of("/etc/nginx") == "/etc")
    assert(fs:dir_of("/etc") == "/")
    assert(fs:dir_of("/") == "/")
    assert(fs:dir_of("etc") == "etc")
    assert(fs:dir_of("") == "")
    // TODO: windows paths
}

test "fs:basename" {
    assert(fs:basename("/etc/nginx/nginx.conf") == "nginx.conf")
    assert(fs:basename("/etc/nginx/") == "nginx")
    assert(fs:basename("/") == "")
    assert(fs:basename("") == "")
    // TODO: windows paths
}

test "fs: create / delete directories & files" {
    // Create dir
    let dir = fs:exe_dir() + "/valk-mkdir-test/"
    fs:mkdir(dir)
    assert(fs:exists(dir))

    // Open & create file
    let file = dir + "test.txt"
    let fd = fs:open_extend(file, true, true, true) ? 0
    assert(fd > 0)
    assert(fs:exists(file))

    // Write to FD
    if fd > 0 {
        io:write(fd, "hello") ! {
            assert(false)
        }
    }
    io:close(fd)

    if fs:exists(file) {
        fs:remove(file)
    }

    fs:rmdir(dir)
    assert(fs:exists(dir) == false)
}
