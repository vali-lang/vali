

struct Url {
    scheme: String; // http, https, file, ...
    host: String;
    path: String;
    query: String;

    static fn parse(str: String) Uri {
        let scheme = ""
        let domain = ""
        let path = ""
        let query = ""

        let start : uint = 0
        let index = str.index_of("://") ? 0
        if index > 0 {
            let part = this.sub_str_bytes(0, index);
            if part.is_alpha() {
                start = index + 3;
                proto = part;
            }
        }

        let query_index = 999999#uxx;
        if scheme == "http" || scheme == "https" {
            index = this.index_of("/", start) !? start;
            if index == start :
                index = this.index_of("?", start) !? 999999;
            domain = this.sub_str(start, index - start);
            start = index;
            query_index = this.index_of("?", start) !? query_index;
        }
        path = this.sub_str(start, query_index - start);
        query = this.sub_str(query_index + 1, 999999);

        return Uri {
            protocol: proto,
            domain: domain,
            path: path,
            query: query,
        };
    }
}
