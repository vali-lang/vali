
header "sys" as sys;

alias FD as uint;

fn write(fd: FD, str: String) !failed !again {
    let c = sys:write(fd @as i32, str.data, str.bytes);
    if c == -2 {
        throw again;
    }
    if c < 0 {
        throw failed;
    }
}

fn write_from_ptr(fd: FD, data: ptr, length: uint) uint !failed !again {
    let c = sys:write(fd @as i32, data, length);
    if c == -2 {
        throw again;
    }
    if c < 0 {
        throw failed;
    }
    return c @as uint;
}

fn read(fd: FD, buffer: ptr, buffer_size: uint) uint !failed !again {
    let rcvd = sys:read(fd @as i32, buffer, buffer_size);
    if rcvd == -2 {
        throw again;
    }
    if rcvd < 0 {
        throw failed;
    }
    return rcvd @as uint;
}

fn close(fd: FD) {
    let c = sys:close(fd @as i32);
}
