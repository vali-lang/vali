
use io;
use os;

snippet reserve(amount: V) {
    @cache_value(stack) as STACK
    @cache_value(STACK.stack_adr) as STACK_ADR

    if disable_gc == false {
        let x = amount
        while x-- > 0 {
            @ptrv(STACK_ADR, ptr, x) = null
        }

        STACK_ADR = STACK_ADR + (amount * sizeof(ptr));
    }

} => (STACK, STACK_ADR)

snippet run_gc_check(retv: V) {
    if disable_gc == false {
        let s = stack
        if s.stack_adr < s.lowest_next {
            s.lowest_next = s.stack_adr
        }
        if s.stack_adr <= s.lowest {
            if pool_usage > 10 {
                s.run_gc = true
            }
        }
        if s.run_gc {
            s.gc()
        }
    }
}

snippet pop_return(retv: V) {
    STACK_ADR = STACK_ADR
}

snippet pop_no_return() {
    STACK_ADR = STACK_ADR
}
