
struct Bump {
    space_left: uint (0)
    start: ptr (null)
    current: ptr (null)
    adr: ptr (null)

    static fn new() Bump {
        let b = Bump {}
        b.create_block()
        b.start = b.current
        return b
    }
    fn create_block() {
        this.space_left = 100000 - 8
        let current = this.current
        if current != null {
            let next = @ptrv(current, ptr, 0)
            if next != null {
                this.current = next
                this.adr = next + 8
                return
            }
        }
        let adr = alloc(100000)
        if current != null {
            @ptrv(current, ptr, 0) = adr
        }
        @ptrv(adr, ptr, 0) = null
        this.current = adr
        this.adr = adr + 8
    }
    fn alloc(size: uint) ptr {
        let fsize = size + (size % 8)
        let left = this.space_left;
        if left < fsize {
            this.create_block()
        }
        let adr = this.adr;
        this.space_left -= fsize
        this.adr = adr + fsize
        return adr
    }

    fn wipe() {
        this.space_left = 100000 - 8
        let start = this.start
        this.current = start
        this.adr = start + 8
    }
}
