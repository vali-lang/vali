
integer u8 1 unsigned {
    use Number

    fn is_ascii() bool {
        return this < 128;
    }
    fn is_hex() bool {
        return (this >= '0' && this <= '9') || (this >= 'a' && this <= 'f') || (this >= 'A' && this <= 'F')
    }
    fn is_number() bool {
        return this >= '0' && this <= '9';
    }
    fn is_lower() bool {
        return this >= 'a' && this <= 'z';
    }
    fn is_upper() bool {
        return this >= 'A' && this <= 'Z';
    }
    fn is_alpha() bool {
        return (this >= 'A' && this <= 'Z') || (this >= 'a' && this <= 'z');
    }
    fn is_alpha_numeric() bool {
        return (this >= 'A' && this <= 'Z') || (this >= 'a' && this <= 'z') || (this >= '0' && this <= '9');
    }
    fn is_whitespace() bool {
        return (this == '\t' || this == '\n' || this == '\v' || this == '\f' || this == '\r' || this == ' ');
    }
    fn is_newline() bool {
        return this == '\n' || this == '\r';
    }

    fn hex_byte_to_hex_value() u8 {
        if this >= '0' && this <= '9' {
            return this - '0'
        }
        if this >= 'a' && this <= 'f' {
            return this - 'a' + 10
        }
        return this - 'A' + 10
    }
}
